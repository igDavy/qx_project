<template>
	<view class="login-container">
			
		<view class="logo-box">
			<view class="logo-image">
				<image src="/static/logo.png" mode=""></image>
			</view>
			<view class="title-name">{{$config.title_name}}</view>
		</view>
		
		<view class="u-form">
			<up-form
				labelPosition="left"
				:model="formData"
			>
				<up-form-item
					label=""
					prop="formData.phoneNumber"
					borderBottom
				>
					<up-input
						v-model="formData.phoneNumber"
						border="surround"
						placeholder="请输入手机号码"
					></up-input>
				</up-form-item>
				<up-form-item
					label=""
					prop="formData.password"
					borderBottom
					v-show="otherLoginType == 'password' || otherLoginType == 'wechat'"
				>
					<up-input
						v-model="formData.password"
						border="surround"
						type="password"
						placeholder="请输入密码"
					></up-input>
				</up-form-item>
				<up-form-item
					label=""
					prop="formData.password"
					borderBottom
					v-show="otherLoginType == 'shortMsg'"
				>
					<up-input placeholder="请输入验证码">
						<template #suffix>
							<up-code
								ref="uCodeRef"
								@change="codeChange"
								seconds="20"
								changeText="X秒重新获取哈哈哈"
							></up-code>
							<up-button
								@tap="getCode"
								:text="tips"
								type="success"
							></up-button>
						</template>
					</up-input>
				</up-form-item>
				<up-form-item
					label=""
					borderBottom
				>
					<up-button type="primary" size="20">登录</up-button>
				</up-form-item>
			</up-form>
			
		</view>

		<up-divider text="其他方式登录"></up-divider>
		<view class="other-login">
			<view class="other-login-item" @tap="handleOtherLogin('wechat')">
				<image src="/static/wechat.png" mode="微信登录"></image>
			</view>
			<view class="other-login-item" @tap="handleOtherLogin('shortMsg')">
				<image src="/static/short-msg.png" mode="短信登录"></image>
			</view>
		</view>

		<view class="agreement-box">
			<up-checkbox
				name="agree"
				usedAlone
				v-model:checked="aloneChecked"
			>
			</up-checkbox>	
			<view class="agreement-text">我已阅读并同意</view>
			<view class="agreement-text" style="color: #007aff">《用户协议》</view>
			<view class="agreement-text">和</view>
			<view class="agreement-text" style="color: #007aff">《隐私政策》</view>
		</view>

		<view class="register" @tap="handleGoRegister">立即注册</view>
		
	</view>
</template>

<script setup>
	import $config from "@/config/config"
	import { ref } from "vue"
	
	const aloneChecked = ref(false)
	const formData = ref({
		phoneNumber: '',
		password: ''
	})
	
	const tips = ref('');
	const uCodeRef = ref(null);
	const codeChange = (text) => {
		tips.value = text;
	};
	const getCode = () => {
		console.log(uCodeRef.canGetCode)
		if (uCodeRef.canGetCode) {
			// 模拟向后端请求验证码
			uni.showLoading({
				title: '正在获取验证码',
			});
			setTimeout(() => {
				uni.hideLoading();
				// 这里此提示会被start()方法中的提示覆盖
				uni.$u.toast('验证码已发送');
				// 通知验证码组件内部开始倒计时
				uCodeRef.start();
			}, 2000);
		} else {
			uni.$u.toast('倒计时结束后再发送');
		}
	};

	const otherLoginType = ref('password')
	const handleOtherLogin = (type) => {
		otherLoginType.value = type;
	}

	const handleGoRegister = () => {
		uni.navigateTo({
			url: '/pages/register/index'
		})
	}
	
</script>

<style lang="scss" scoped>
@import 'index.scss'
</style>